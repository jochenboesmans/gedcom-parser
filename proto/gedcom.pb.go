// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/gedcom.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Person_GenderType int32

const (
	Person_MALE   Person_GenderType = 0
	Person_FEMALE Person_GenderType = 1
)

var Person_GenderType_name = map[int32]string{
	0: "MALE",
	1: "FEMALE",
}

var Person_GenderType_value = map[string]int32{
	"MALE":   0,
	"FEMALE": 1,
}

func (x Person_GenderType) String() string {
	return proto.EnumName(Person_GenderType_name, int32(x))
}

func (Person_GenderType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6b309385837955ed, []int{0, 0}
}

type Person struct {
	Id                   uint32                   `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	PersonRef            string                   `protobuf:"bytes,2,opt,name=PersonRef,proto3" json:"PersonRef,omitempty"`
	IsLiving             bool                     `protobuf:"varint,3,opt,name=IsLiving,proto3" json:"IsLiving,omitempty"`
	Gender               Person_GenderType        `protobuf:"varint,4,opt,name=Gender,proto3,enum=gedcom.Person_GenderType" json:"Gender,omitempty"`
	DateCreated          string                   `protobuf:"bytes,5,opt,name=DateCreated,proto3" json:"DateCreated,omitempty"`
	Names                []*Person_PersonNameType `protobuf:"bytes,6,rep,name=Names,proto3" json:"Names,omitempty"`
	Facts                []*Person_PersonFactType `protobuf:"bytes,7,rep,name=Facts,proto3" json:"Facts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Person) Reset()         { *m = Person{} }
func (m *Person) String() string { return proto.CompactTextString(m) }
func (*Person) ProtoMessage()    {}
func (*Person) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b309385837955ed, []int{0}
}

func (m *Person) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person.Unmarshal(m, b)
}
func (m *Person) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person.Marshal(b, m, deterministic)
}
func (m *Person) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person.Merge(m, src)
}
func (m *Person) XXX_Size() int {
	return xxx_messageInfo_Person.Size(m)
}
func (m *Person) XXX_DiscardUnknown() {
	xxx_messageInfo_Person.DiscardUnknown(m)
}

var xxx_messageInfo_Person proto.InternalMessageInfo

func (m *Person) GetId() uint32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Person) GetPersonRef() string {
	if m != nil {
		return m.PersonRef
	}
	return ""
}

func (m *Person) GetIsLiving() bool {
	if m != nil {
		return m.IsLiving
	}
	return false
}

func (m *Person) GetGender() Person_GenderType {
	if m != nil {
		return m.Gender
	}
	return Person_MALE
}

func (m *Person) GetDateCreated() string {
	if m != nil {
		return m.DateCreated
	}
	return ""
}

func (m *Person) GetNames() []*Person_PersonNameType {
	if m != nil {
		return m.Names
	}
	return nil
}

func (m *Person) GetFacts() []*Person_PersonFactType {
	if m != nil {
		return m.Facts
	}
	return nil
}

type Person_PersonNameType struct {
	FactTypeId           uint32   `protobuf:"varint,1,opt,name=FactTypeId,proto3" json:"FactTypeId,omitempty"`
	GivenNames           string   `protobuf:"bytes,2,opt,name=GivenNames,proto3" json:"GivenNames,omitempty"`
	Surnames             string   `protobuf:"bytes,3,opt,name=Surnames,proto3" json:"Surnames,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person_PersonNameType) Reset()         { *m = Person_PersonNameType{} }
func (m *Person_PersonNameType) String() string { return proto.CompactTextString(m) }
func (*Person_PersonNameType) ProtoMessage()    {}
func (*Person_PersonNameType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b309385837955ed, []int{0, 0}
}

func (m *Person_PersonNameType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person_PersonNameType.Unmarshal(m, b)
}
func (m *Person_PersonNameType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person_PersonNameType.Marshal(b, m, deterministic)
}
func (m *Person_PersonNameType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person_PersonNameType.Merge(m, src)
}
func (m *Person_PersonNameType) XXX_Size() int {
	return xxx_messageInfo_Person_PersonNameType.Size(m)
}
func (m *Person_PersonNameType) XXX_DiscardUnknown() {
	xxx_messageInfo_Person_PersonNameType.DiscardUnknown(m)
}

var xxx_messageInfo_Person_PersonNameType proto.InternalMessageInfo

func (m *Person_PersonNameType) GetFactTypeId() uint32 {
	if m != nil {
		return m.FactTypeId
	}
	return 0
}

func (m *Person_PersonNameType) GetGivenNames() string {
	if m != nil {
		return m.GivenNames
	}
	return ""
}

func (m *Person_PersonNameType) GetSurnames() string {
	if m != nil {
		return m.Surnames
	}
	return ""
}

type Person_PersonFactType struct {
	FactTypeId           uint32                                 `protobuf:"varint,1,opt,name=FactTypeId,proto3" json:"FactTypeId,omitempty"`
	DateDetail           string                                 `protobuf:"bytes,2,opt,name=DateDetail,proto3" json:"DateDetail,omitempty"`
	PersonPlace          *Person_PersonFactType_PersonPlaceType `protobuf:"bytes,3,opt,name=PersonPlace,proto3" json:"PersonPlace,omitempty"`
	Preferred            bool                                   `protobuf:"varint,4,opt,name=Preferred,proto3" json:"Preferred,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *Person_PersonFactType) Reset()         { *m = Person_PersonFactType{} }
func (m *Person_PersonFactType) String() string { return proto.CompactTextString(m) }
func (*Person_PersonFactType) ProtoMessage()    {}
func (*Person_PersonFactType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b309385837955ed, []int{0, 1}
}

func (m *Person_PersonFactType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person_PersonFactType.Unmarshal(m, b)
}
func (m *Person_PersonFactType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person_PersonFactType.Marshal(b, m, deterministic)
}
func (m *Person_PersonFactType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person_PersonFactType.Merge(m, src)
}
func (m *Person_PersonFactType) XXX_Size() int {
	return xxx_messageInfo_Person_PersonFactType.Size(m)
}
func (m *Person_PersonFactType) XXX_DiscardUnknown() {
	xxx_messageInfo_Person_PersonFactType.DiscardUnknown(m)
}

var xxx_messageInfo_Person_PersonFactType proto.InternalMessageInfo

func (m *Person_PersonFactType) GetFactTypeId() uint32 {
	if m != nil {
		return m.FactTypeId
	}
	return 0
}

func (m *Person_PersonFactType) GetDateDetail() string {
	if m != nil {
		return m.DateDetail
	}
	return ""
}

func (m *Person_PersonFactType) GetPersonPlace() *Person_PersonFactType_PersonPlaceType {
	if m != nil {
		return m.PersonPlace
	}
	return nil
}

func (m *Person_PersonFactType) GetPreferred() bool {
	if m != nil {
		return m.Preferred
	}
	return false
}

type Person_PersonFactType_PersonPlaceType struct {
	PlaceName            string   `protobuf:"bytes,1,opt,name=PlaceName,proto3" json:"PlaceName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Person_PersonFactType_PersonPlaceType) Reset()         { *m = Person_PersonFactType_PersonPlaceType{} }
func (m *Person_PersonFactType_PersonPlaceType) String() string { return proto.CompactTextString(m) }
func (*Person_PersonFactType_PersonPlaceType) ProtoMessage()    {}
func (*Person_PersonFactType_PersonPlaceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6b309385837955ed, []int{0, 1, 0}
}

func (m *Person_PersonFactType_PersonPlaceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Person_PersonFactType_PersonPlaceType.Unmarshal(m, b)
}
func (m *Person_PersonFactType_PersonPlaceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Person_PersonFactType_PersonPlaceType.Marshal(b, m, deterministic)
}
func (m *Person_PersonFactType_PersonPlaceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Person_PersonFactType_PersonPlaceType.Merge(m, src)
}
func (m *Person_PersonFactType_PersonPlaceType) XXX_Size() int {
	return xxx_messageInfo_Person_PersonFactType_PersonPlaceType.Size(m)
}
func (m *Person_PersonFactType_PersonPlaceType) XXX_DiscardUnknown() {
	xxx_messageInfo_Person_PersonFactType_PersonPlaceType.DiscardUnknown(m)
}

var xxx_messageInfo_Person_PersonFactType_PersonPlaceType proto.InternalMessageInfo

func (m *Person_PersonFactType_PersonPlaceType) GetPlaceName() string {
	if m != nil {
		return m.PlaceName
	}
	return ""
}

func init() {
	proto.RegisterEnum("gedcom.Person_GenderType", Person_GenderType_name, Person_GenderType_value)
	proto.RegisterType((*Person)(nil), "gedcom.Person")
	proto.RegisterType((*Person_PersonNameType)(nil), "gedcom.Person.PersonNameType")
	proto.RegisterType((*Person_PersonFactType)(nil), "gedcom.Person.PersonFactType")
	proto.RegisterType((*Person_PersonFactType_PersonPlaceType)(nil), "gedcom.Person.PersonFactType.PersonPlaceType")
}

func init() { proto.RegisterFile("proto/gedcom.proto", fileDescriptor_6b309385837955ed) }

var fileDescriptor_6b309385837955ed = []byte{
	// 380 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xc2, 0x40,
	0x10, 0xb6, 0xfc, 0xd4, 0x32, 0x8d, 0x68, 0xf6, 0x54, 0x1b, 0x35, 0x0d, 0x17, 0xeb, 0x81, 0x12,
	0xe1, 0x09, 0x54, 0x7e, 0x42, 0x82, 0x4a, 0xaa, 0x27, 0x6f, 0x4b, 0x3b, 0x40, 0x0d, 0x6d, 0xc9,
	0x6e, 0x21, 0xf1, 0x45, 0x7c, 0x4e, 0x1f, 0xc1, 0xec, 0x2e, 0xa5, 0x95, 0x03, 0xf1, 0xd4, 0xce,
	0x37, 0xdf, 0x4f, 0x67, 0x3a, 0x40, 0xd6, 0x2c, 0xcd, 0xd2, 0xce, 0x02, 0xc3, 0x20, 0x8d, 0x3d,
	0x59, 0x10, 0x5d, 0x55, 0xad, 0xef, 0x3a, 0xe8, 0x53, 0x64, 0x3c, 0x4d, 0x48, 0x13, 0x2a, 0xe3,
	0xd0, 0xd2, 0x1c, 0xcd, 0x3d, 0xf3, 0x2b, 0xe3, 0x90, 0x5c, 0x41, 0x43, 0x75, 0x7c, 0x9c, 0x5b,
	0x15, 0x47, 0x73, 0x1b, 0x7e, 0x01, 0x10, 0x1b, 0x8c, 0x31, 0x9f, 0x44, 0xdb, 0x28, 0x59, 0x58,
	0x55, 0x47, 0x73, 0x0d, 0x7f, 0x5f, 0x93, 0x7b, 0xd0, 0x47, 0x98, 0x84, 0xc8, 0xac, 0x9a, 0xa3,
	0xb9, 0xcd, 0xee, 0xa5, 0xb7, 0xcb, 0x56, 0x72, 0x4f, 0x35, 0xdf, 0xbf, 0xd6, 0xe8, 0xef, 0x88,
	0xc4, 0x01, 0xb3, 0x4f, 0x33, 0x7c, 0x62, 0x48, 0x33, 0x0c, 0xad, 0xba, 0x8c, 0x2b, 0x43, 0xa4,
	0x07, 0xf5, 0x17, 0x1a, 0x23, 0xb7, 0x74, 0xa7, 0xea, 0x9a, 0xdd, 0xeb, 0x03, 0x4f, 0xf5, 0x10,
	0x0c, 0xe9, 0xab, 0xb8, 0x42, 0x34, 0xa4, 0x41, 0xc6, 0xad, 0xd3, 0x23, 0x22, 0xc1, 0x50, 0x22,
	0xc9, 0xb5, 0x57, 0xd0, 0xfc, 0xeb, 0x46, 0x6e, 0x00, 0x72, 0xd2, 0x7e, 0x45, 0x25, 0x44, 0xf4,
	0x47, 0xd1, 0x16, 0x13, 0xf5, 0x81, 0x6a, 0x57, 0x25, 0x44, 0x2c, 0xeb, 0x6d, 0xc3, 0x12, 0xd9,
	0xad, 0xca, 0xee, 0xbe, 0xb6, 0x7f, 0xb4, 0x3c, 0x2e, 0x37, 0xfc, 0x4f, 0x9c, 0xd8, 0x4c, 0x1f,
	0x33, 0x1a, 0xad, 0xf2, 0xb8, 0x02, 0x21, 0xaf, 0x60, 0x2a, 0xc7, 0xe9, 0x8a, 0x06, 0x28, 0x13,
	0xcd, 0x6e, 0xfb, 0xe8, 0xec, 0x5e, 0x49, 0x20, 0x77, 0x51, 0x76, 0x90, 0xa7, 0xc0, 0x70, 0x8e,
	0x8c, 0x61, 0x28, 0xff, 0xa9, 0xe1, 0x17, 0x80, 0xdd, 0x81, 0xf3, 0x03, 0xb5, 0x14, 0x88, 0x42,
	0x8c, 0x2f, 0x07, 0x10, 0xb7, 0x93, 0x03, 0xad, 0x16, 0x40, 0x71, 0x02, 0xc4, 0x80, 0xda, 0xf3,
	0xc3, 0x64, 0x70, 0x71, 0x42, 0x00, 0xf4, 0xe1, 0x40, 0xbe, 0x6b, 0x8f, 0x77, 0x1f, 0xb7, 0x8b,
	0x28, 0x5b, 0x6e, 0x66, 0x5e, 0x90, 0xc6, 0x9d, 0xcf, 0x34, 0x58, 0x62, 0x32, 0x4b, 0x91, 0xc7,
	0x34, 0xe1, 0xbb, 0x53, 0x6e, 0xaf, 0x29, 0xe3, 0xc8, 0x66, 0xba, 0x3c, 0xe9, 0xde, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x0b, 0x33, 0xaa, 0x2b, 0xe8, 0x02, 0x00, 0x00,
}
